@startuml
业务类 -> 代理发送类: 携带数据参数，发送调用请求
代理发送类 -> 代理发送类: 1.1 获取方法与类上的@SendHelper注解
代理发送类 -> 代理发送类: 1.2 根据@SendHelper注解预先获取执行器
代理发送类 -> 被代理类: 2 执行被代理类的方法，获取执行结果
被代理类 --> 代理发送类: 2.1 被代理方法未发生异常，返回执行结果
被代理类 --> 代理发送类: 2.2 被代理方法发生异常，跳转到异常处理
代理发送类 -> 代理发送类: 2.1.1 根据类上与方法上的AutoMessageKey注解自动生成UUID(当前线程内已传入时忽略生成)
代理发送类 -> RocketMQ: 3 传入MessageKey，转换消息，调用Produce容器发送消息
RocketMQ --> 代理发送类: 3.1 发送成功
代理发送类 -> 数据日志库: 3.1.1 调用@SendHelper标注的执行器中的onSuccessSave方法,保存已发送信息
RocketMQ --> 代理发送类: 3.2 发送失败，跳转到异常处理
代理发送类 -> 代理发送类: 4 异常处理
代理发送类 -> 数据日志库: 4.1 调用@SendHelper标注的执行器中的onFailSave方法,保存发送失败的信息
代理发送类 -> 日志通知服务: 4.2 调用@SendHelper标注的执行器中的onFailNotify方法，发送失败及异常信息
代理发送类 --> 业务类: 返回被代理类的返回值及被代理类的异常信息
@enduml
